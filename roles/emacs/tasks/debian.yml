---

- name: Install build dependencies for emacs
  apt: name={{ emacs_build_dep }} state=build-dep
  register: emacs_builddep
  changed_when: "'0 newly installed' not in emacs_builddep.stdout_lines[-1]"

- name: Install emacs additional packages
  apt: name={{item}}
  with_times:
    - libpng-dev
    - libz-dev
    - libpoppler-glib-dev
    - libpoppler-private-dev

- name: Install checkinstall
  apt: name=checkinstall state=latest

- name: Configure emacs build
  shell: ./configure --without-toolkit-scroll-bars --with-x-toolkit=no
  args:
    chdir: /home/{{ansible_ssh_user}}/tp/emacs-{{ emacs_version }}-src/emacs-{{ emacs_version }}
    creates: /home/{{ansible_ssh_user}}/tp/emacs-{{ emacs_version }}-src/emacs-{{ emacs_version }}/Makefile

- name: Build emacs
  shell: make
  args:
    chdir: /home/{{ansible_ssh_user}}/tp/emacs-{{ emacs_version }}-src/emacs-{{ emacs_version }}
  register: emacs_build
  changed_when: "emacs_build.stdout.count('Nothing to be done for') != 5"  # any better way?

- name: Create package
  command: checkinstall -y --install=no --pkgname={{ emacs_package_name }}
  args:
    chdir: /home/{{ansible_ssh_user}}/tp/emacs-{{ emacs_version }}-src/emacs-{{ emacs_version }}
    creates: /home/{{ansible_ssh_user}}/tp/emacs-{{ emacs_version }}-src/emacs-{{ emacs_version }}/{{ emacs_package_name }}_{{ emacs_version }}-1_{{ architecture.stdout }}.deb

- name: Install built the emacs package
  apt: deb=/home/{{ansible_ssh_user}}/emacs-{{ emacs_version }}-src/emacs-{{ emacs_version }}/{{ emacs_package_name }}_{{ emacs_version }}-1_{{ architecture.stdout }}.deb
