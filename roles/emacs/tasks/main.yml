---

- name: Assures /tmp/emacs-{{ emacs_version }}-src dir exists
  file: path=/tmp/emacs-{{ emacs_version }}-src state=directory

- name: Download emacs source
  unarchive:
    src: http://ftpmirror.gnu.org/emacs/emacs-{{ emacs_version }}.tar.gz
    dest: /tmp/emacs-{{ emacs_version }}-src
    copy: no
    creates: /tmp/emacs-{{ emacs_version }}-src/emacs-{{ emacs_version }}

- name: Install build dependencies for emacs
  apt: name={{ emacs_build_dep }} state=build-dep
  register: emacs_builddep
  changed_when: "'0 newly installed' not in emacs_builddep.stdout_lines[-1]"

- name: Configure emacs build
  shell: ./configure --without-toolkit-scroll-bars --with-x-toolkit=no
  args:
    chdir: /tmp/emacs-{{ emacs_version }}-src/emacs-{{ emacs_version }}
    creates: /tmp/emacs-{{ emacs_version }}-src/emacs-{{ emacs_version }}/Makefile

- name: Build emacs
  shell: make
  args:
    chdir: /tmp/emacs-{{ emacs_version }}-src/emacs-{{ emacs_version }}
  register: emacs_build
  changed_when: "emacs_build.stdout.count('Nothing to be done for') != 5"  # any better way?

- name: Install checkinstall
  apt: name=checkinstall state=latest

- name: Get architecture
  command: dpkg --print-architecture
  register: architecture
  changed_when: False
  always_run: True

- name: Create package
  command: checkinstall -y --install=no --pkgname={{ emacs_package_name }}
  args:
    chdir: /tmp/emacs-{{ emacs_version }}-src/emacs-{{ emacs_version }}
    creates: /tmp/emacs-{{ emacs_version }}-src/emacs-{{ emacs_version }}/{{ emacs_package_name }}_{{ emacs_version }}-1_{{ architecture.stdout }}.deb

- name: Install built the emacs package
  apt: deb=/tmp/emacs-{{ emacs_version }}-src/emacs-{{ emacs_version }}/{{ emacs_package_name }}_{{ emacs_version }}-1_{{ architecture.stdout }}.deb

- name: Install fonts
  apt: name={{item}} state=latest
  with_items: "{{ emacs_fonts }}"

- name: Install additional packages for emacs
  apt: name={{item}} state=latest
  with_items: "{{ emacs_add_packages }}"

- name: Install python packages for emacs
  pip: name={{item}} state=latest
  with_items: "{{ emacs_python_packages }}"

- name: Download Powerline fonts
  git: repo=https://github.com/powerline/fonts dest=~/.emacs.d/powerline-fonts
  become: no

- name: Install powerline fonts
  shell: ./install.sh
  args:
    chdir: ~/.emacs.d/powerline-fonts
  become: no

- name: Install gpg
  apt: name=gnupg state=latest

- name: Download mailencrypt
  unarchive:
    src: http://downloads.sourceforge.net/project/mailcrypt/mailcrypt/3.5.9/mailcrypt-3.5.9.tar.gz
    dest: /tmp
    copy: no
    creates: /tmp/mailcrypt-3.5.9

- name: Install mailencrypt
  shell: ./configure && make && make install
  args:
    chdir: /tmp/mailcrypt-3.5.9

- name: Download Spotify.el
  git: repo=https://github.com:storax/spotify.el dest=~/.emacs.d/spotify.el
  become: no

- name: Download Orgmode
  git: repo=git://orgmode.org:org-mode.git dest=~/.emacs.d/orgmode
  become: no
